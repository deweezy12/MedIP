// MDL v1 utf8
mevislabVersion = 3.6.1.9
network  {
  watchlist = ""
}
module ImageLoad {
  internal  {
    frame = "581 425 152 80"
    moduleGroupName = ""
    showNetworkPanel = true
    windows  {
      window _default {
        geometry = "576 587 479 353"
        sizeHint = "479 353"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = VectorField
    filename = $(NETWORK)/Data/vectors.mlimage
    autoLoad = TRUE
    readRaw = FALSE
    rawX = 1
    rawY = 1
    rawZ = 1
    rawC = 1
    rawT = 1
    rawU = 1
    dataTypeRaw = "unsigned int8"
    planarConfig = Contiguous
    byteOrder = LittleEndian
    dataOffset = 0
    pageSizeHint = "0 0 0 0 0 0"
    suppressErrorLog = FALSE
    dicomIgnoreHalfVoxelShift = FALSE
    enableCheckSumTests = FALSE
  }
}
module View2D {
  internal  {
    frame = "-35 -307 120 56"
    moduleGroupName = "Define Seed Markers"
    windows  {
      window _default {
        geometry = "325 238 1126 799"
        sizeHint = "400 400"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = View2D
    inventorInputOn = TRUE
    inventorOutputOn = FALSE
    view2DExtensionsOn = TRUE
    startSlice = 66
    numSlices = 1
    numXSlices = 1
    sliceStep = 1
    slab = 1
    blendMode = BLEND_REPLACE
    timePoint = 0
    maxTimePoint = 17
    filterMode = FILTER_LINEAR
    standardKeys = TRUE
    cineMode = CINE_ZT
    cineDirection = CINE_FORWARD
    cineRepeat = CINE_ONCE
    cineSpeed = 0.1
    cineAlwaysReset = TRUE
    snapToCenter = TRUE
    zoomMode = VIEW2D_AUTO_ZOOM
    unzoomOnImageChange = FALSE
    sliceZoom = 1
    sliceZoomSynced = 1
    baseColor = "1 1 1"
    margin = "2 2"
    sliceOrigin = "0 0"
    useShaders = TRUE
    useManagedInteraction = FALSE
    lutCenter = 328.902770996094
    lutWidth = 692.109558105469
    annotationOn = TRUE
    annotationMode = ANNO_MODE_AUTO
    annotationSizeMode = ANNO_SHOW_DETAILED
    annotationCol = "0.899999976158142 0.899999976158142 0.899999976158142"
    annotationFontSize = ANNO_SIZE_AUTO
    annoCoords = Voxel
    annoCTValue = AsIs
    borderOn = FALSE
    borderColor = "0.899999976158142 0.899999976158142 0.899999976158142"
    valueHighPrecision = TRUE
    showColorChannelValues = FALSE
    colorChannelSeparator = " / "
    maxPrecision = 4
    enableSlicing = TRUE
    useRelativeLUTIfNoInputImage = TRUE
  }
}
module SoView2DMarkerEditor {
  internal  {
    frame = "54 -70 160 56"
    moduleGroupName = "Define Seed Markers"
    windows  {
      window _default {
        geometry = "1559 775 722 685"
        sizeHint = "722 685"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = SoView2DMarkerEditor
    interactionProviderID = ""
    drawingOn = TRUE
    editingOn = TRUE
    fixZOn = TRUE
    color = "1 1 1"
    selectionTolerance = 4
    needsValidVoxel = TRUE
    button1 = PRESSED
    button2 = IGNORED
    button3 = IGNORED
    shift = IGNORED
    control = IGNORED
    alt = IGNORED
    wantsAllEvents = FALSE
    wantsKeyEvents = TRUE
    wantsMouseWheelEvents = FALSE
    setEventHandled = FALSE
    ignoreHandledEvents = FALSE
    createNewMode = FALSE
    renderOnSlab = FALSE
    clipToSlice = FALSE
    cursorShape = CROSS_PLUS_CURSOR
    depthVisibility = 1
    snapToVoxel = TRUE
    snapToSlice = TRUE
    currentType = 0
    deleteOnClick = FALSE
    addOnClick = TRUE
    alphaFactor = 1
    minimumAlpha = 0.1
    iconFile = $(MLAB_MeVisLab_Standard)/Modules/Resources/Images/markerIcons.tif
    useIconFile = FALSE
    iconIdx = 0
    drawMarkerShapesWithLines = FALSE
    selectingOn = TRUE
    alwaysPerformHitTest = FALSE
    actOnReleaseOnly = FALSE
    editorMode = EDIT_MARKER
    colorMode = COLOR_BY_TYPE
    textColorMode = COLOR_TEXT
    textMode = TEXT_OFF
    textPosition = TEXT_POSITION_RIGHT_BELOW
    textColor = "1 1 1"
    textShadow = TRUE
    textFontSize = 12
    showTextOnlyForSelectedMarker = FALSE
    cutText = FALSE
    maxNumberOfLines = 1
    vectorArrow = VECTOR_END_ARROW
    vectorLineWidth = 1
    useAntiAlias = TRUE
    useVectorLengthAsMarkerSize = FALSE
    depthVectorDrawMode = DRAW_HIGHLIGHT_SLICE_SEGMENT
    drawMode = DRAW_MARKER
    highlightSelection = TRUE
    selectiveDrawing = FALSE
    selectionBoxesForCurrentOnly = FALSE
    cooperative = FALSE
    overwriteCurrentTimePoint = FALSE
    newCurrentTimePoint = 0
    depthVisibilityMode = DEPTH_IN_SLICES
    cursorShapeDragStartPoint = CROSS_MOVE_CURSOR
    cursorShapeDragEndPoint = CROSS_MOVE_CURSOR
    cursorShapeDragResize = CROSS_MOVE_CURSOR
    cursorShapeDragOffset = MOVE_ALL_CURSOR
    cursorShapeDragMove = MOVE_ALL_CURSOR
    cursorShapeDelete = CROSS_MINUS_CURSOR
    listString = ""
    index = 1
    persistent = FALSE
    listStringEnable = FALSE
    applySelect = FALSE
    name = ""
    newName = ""
    overflowMode = None
    maxSize = 0
    useInsertTemplate = FALSE
    posXYZ = "24.251708984375 61.2178726196289 39.7560195922852"
    posC = 0
    posT = 0
    posU = 0
    vecXYZ = "0 0 0"
    type = 0
    newPosXYZ = "0 0 0"
    newPosC = 0
    newPosT = 0
    newPosU = 0
    newVecXYZ = "0 0 0"
    newType = 0
  }
}
module PythonArithmetic {
  internal  {
    frame = "889 97 128 64"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "716 365 1146 964"
        sizeHint = "606 568"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = TrackParticles
    calculateOutputSubImage = "*import numpy as np
out.fill(0)

# Get voxel dimensions - fallback to 1mm if APIs fail
try:
    sx, sy, sz = in0.voxelSize()
except AttributeError:
    try:
        sx, sy, sz = in0.image().voxelSize()
    except:
        print("Warning: voxel size API not available, defaulting to 1mm")
        sx = sy = sz = 1.0

print(f"Voxel dimensions: {sx:.2f} x {sy:.2f} x {sz:.2f} mm")

# Output volume dimensions
Nz, Ny, Nx = out.shape[-3:]

def check_bounds(x, y, z, nx, ny, nz):
    """Check if coordinates are within volume bounds"""
    return (0 <= x < nx) and (0 <= y < ny) and (0 <= z < nz)

# Extract seed points from marker list
marker_field = ctx.parent().field("XMarkerListConvert.outputXMarkerList")
seeds = marker_field.object().getMarkers()

if len(seeds) == 0:
    raise RuntimeError("No markers found - add at least one seed point")

print(f"Processing {len(seeds)} seed points")

# Parse vector field structure
vec = in0.squeeze()
is_time_major = vec.shape[0] not in [1, 3]  # time axis first vs last
num_timesteps = vec.shape[0] if is_time_major else vec.shape[-1]

print(f"Vector field shape: {vec.shape}")
print(f"Time steps: {num_timesteps}, time-major ordering: {is_time_major}")

# Track each pathline
for seed_idx, marker in enumerate(seeds):
    current_pos = np.array(marker.pos[:3], dtype=np.float64)
    
    for step in range(num_timesteps):
        # Convert to integer indices
        i, j, k = np.rint(current_pos).astype(np.int32)
        
        # Check if we've left the volume
        if not check_bounds(i, j, k, Nx, Ny, Nz):
            print(f"Seed {seed_idx+1} exited volume at step {step}")
            break
            
        # Mark current position in output
        out[0, step, 0, k, j, i] = 1
        
        # Sample velocity at current position
        if is_time_major:
            velocity = vec[step, k, j, i]
        else:
            velocity = vec[i, j, k, :, step]
            
        # Integrate position (convert velocity to voxel units)
        current_pos += velocity / np.array([sx, sy, sz])

print("Pathline integration complete")*"
    calculateInputSubImageBox = "inBox = outBox"
    calculateOutputImageProperties = "extent = inImage0.imageExtent()
outImage.setPageExtent(extent[0],extent[1],extent[2],extent[3],extent[4],extent[5] )"
    numberOfInputs = 1
    doubleConstant0 = 0
    doubleConstant1 = 0
    doubleConstant2 = 0
    doubleConstant3 = 0
    doubleConstant4 = 0
    doubleConstant5 = 0
    doubleConstantName0 = ""
    doubleConstantName1 = ""
    doubleConstantName2 = ""
    doubleConstantName3 = ""
    doubleConstantName4 = ""
    doubleConstantName5 = ""
    intConstant0 = 0
    intConstant1 = 0
    intConstant2 = 0
    intConstant3 = 0
    intConstant4 = 0
    intConstant5 = 0
    intConstantName0 = ""
    intConstantName1 = ""
    intConstantName2 = ""
    intConstantName3 = ""
    intConstantName4 = ""
    intConstantName5 = ""
    setMinMaxValues = FALSE
    minVoxelValue = 0
    maxVoxelValue = 0
    setDataType = TRUE
    dataType = "unsigned int16"
    inputDataType0 = "input type"
    inputDataType1 = "output type"
    inputDataType2 = "output type"
    inputDataType3 = "output type"
    inputDataType4 = "output type"
    inputHandling0 = AllowAny
    inputHandling1 = AllowAny
    inputHandling2 = AllowAny
    inputHandling3 = AllowAny
    inputHandling4 = AllowAny
  }
}
module SoExaminerViewer {
  internal  {
    frame = "445 -287 136 64"
    moduleGroupName = "View Vector Field"
    windows  {
      window _viewer {
        geometry = "1200 332 982 905"
        sizeHint = "400 400"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = ViewVectorField
    renderCaching = AUTO
    boundingBoxCaching = AUTO
    renderCulling = AUTO
    pickCulling = AUTO
    border = FALSE
    background = "0 0 0"
    transparency = BLEND
    antialiasing = FALSE
    antialiasingNumPasses = 1
    useSampleBuffers = FALSE
    numSamples = 8
    grabKeyFocus = TRUE
    enableKeyCommands = TRUE
    snapshotFormat = SNAPSHOT_RGB
    outputAviFile = ""
    autoRedrawWhenRecording = TRUE
    frameRate = 7
    frameRateAvi = 15
    outputSnapshotFile = none
    outputSnapshotFileWritten = none
    autoIncreaseFile = TRUE
    showSnapshotWithShell = FALSE
    snapCount = 0
    inputDevicesList = ""
    headlight = TRUE
    decoration = TRUE
    popupMenuEnabled = FALSE
    viewing = TRUE
    autoClipping = TRUE
    drawStyle = VIEW_AS_IS
    interactiveDrawStyle = VIEW_LOW_COMPLEXITY
    viewAllFlag = FALSE
    initialCameraOrientation = CAMERA_KEEP_AS_IS
    applyCameraOrientation = CAMERA_KEEP_AS_IS
    cameraType = CAMERA_ORTHOGRAPHIC
    autoApplyUserSettingOrientation = FALSE
    userSettingOrientation = "0 0 1 0"
    automaticViewAll = FALSE
    storeCurrentState = TRUE
    saveCamera = TRUE
    cursor = TRUE
    isCameraStored = TRUE
    perspective = FALSE
    stereoViewing = FALSE
    stereoOffset = 3
    height = 1300.231
    position = "1.85489082336426 132.820007324219 -210.831695556641"
    orientation = "-0.330105543136597 0.900661110877991 0.28255969285965 3.06069660186768"
    nearDistance = 95.605637
    farDistance = 318.24118
    focalDistance = 206.81227
    forceRedrawOnInteraction = FALSE
    button1events = TO_VIEWER
    button2events = TO_VIEWER
    button3events = TO_VIEWER
    keyEvents = TO_VIEWER
    animationEnabled = FALSE
    feedback = FALSE
    feedbackSize = 32
    mouseInteraction = ""
    rotationAxis = "0 1 0"
    rotationAngle = 360
    rotationSteps = 80
    recordRotation = TRUE
    wheelZoomEnabled = FALSE
    wheelRotationEnabled = FALSE
  }
}
module SoTensorFieldVis {
  internal  {
    frame = "577 -107 128 56"
    moduleGroupName = "View Vector Field"
    windows  {
      window _default {
        geometry = "785 483 365 293"
        sizeHint = "365 293"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = SoTensorFieldVis
    renderCaching = AUTO
    boundingBoxCaching = AUTO
    renderCulling = AUTO
    pickCulling = AUTO
    autoUpdate = TRUE
    autoApply = TRUE
    sliceViewMode = SLICE_XY
    scaleFactor = 1
    currentSlice = 0
    numberSlicesSlab = 28
    maxSlices = 71
    fixZPos = FALSE
    useIsotropyThreshold = FALSE
    isotropyThreshold = 0.5
    enhanceAnisotropy = FALSE
    enhanceAnisotropyValue = 1
    scaleWithAnisotropy = FALSE
    thinOutGlyphs = TRUE
    useInstancing = TRUE
    useJitter = TRUE
    jitterFactor = 0.5
    glyphMinimumScale = 0.0099999998
    glyphScaleThreshold = 0.001
    glyphComplexity = LOW
    glyphMode = SINGLE_VECTOR
    glyphAmbient = "0.200000002980232 0.200000002980232 0.200000002980232"
    glyphSpecular = "0.400000005960464 0.400000005960464 0.400000005960464"
    glyphShininess = 0.2
    arrowHeadSize = 0.2
  }
}
module MaskToMarkers {
  internal  {
    frame = "901 -51 152 56"
    moduleGroupName = "Show Tracked Markers"
    showNetworkPanel = true
    windows  {
      window _default {
        geometry = "1400 728 348 192"
        sizeHint = "348 192"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = MaskToMarkers
    lowerThreshold = 0
    setType = User
    type = 0
    updateMode = AutoUpdate
    vectorMode = Zero
  }
}
module SoBackground {
  internal  {
    frame = "414 -116 112 56"
    moduleGroupName = "View Vector Field"
    windows  {
      window _default {
        geometry = "1845 1038 151 158"
        sizeHint = "151 158"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = SoBackground
    rotate = TRUE
    flip = FALSE
    on = TRUE
    depthBuffer = TRUE
  }
}
module XMarkerListConvert {
  internal  {
    frame = "121 -187 144 72"
    moduleGroupName = "Define Seed Markers"
    showNetworkPanel = true
    windows  {
      window _default {
        geometry = "1002 725 556 65"
        sizeHint = "556 65"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = XMarkerListConvert
    conversionMode = WorldToIntegerVoxel
    enableDirectionVectorConversion = TRUE
  }
}
module ImageLoad {
  internal  {
    frame = "377 429 160 72"
    moduleGroupName = ""
    showNetworkPanel = true
    windows  {
      window _default {
        geometry = "197 445 778 353"
        sizeHint = "479 353"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = MagnitudeImage
    filename = $(NETWORK)/Data/magnitude.mlimage
    autoLoad = TRUE
    readRaw = FALSE
    rawX = 1
    rawY = 1
    rawZ = 1
    rawC = 1
    rawT = 1
    rawU = 1
    dataTypeRaw = "unsigned int8"
    planarConfig = Contiguous
    byteOrder = LittleEndian
    dataOffset = 0
    pageSizeHint = "0 0 0 0 0 0"
    suppressErrorLog = FALSE
    dicomIgnoreHalfVoxelShift = FALSE
    enableCheckSumTests = FALSE
  }
}
module MergeRegions {
  internal  {
    frame = "473 245 192 72"
    moduleGroupName = ""
    showNetworkPanel = true
    windows  {
      window _default {
        geometry = "960 -731 1044 436"
        sizeHint = "1044 436"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = MergeRegions
    outWorldBox = "-139.550390183925 -91.9592190384861 -71.493978440762 0 0 0 193.366283953197 138.249119460588 108.506021559238 0 17 0"
    fillValue = 0
    selectROI = UseInputRegion
    roiSourceIndex = 0
    numActiveImages = 3
    allowInvalidInputs = FALSE
    allowDifferentInputImageGridsInCopyMode = FALSE
    worldToVoxelGridConversionTolerance = 0.001
    mergeImgMode = None
    c0 = 0
    useC0 = TRUE
    c1 = 0
    useC1 = TRUE
    c2 = 0
    useC2 = TRUE
    c3 = 0
    useC3 = TRUE
    c4 = 0
    useC4 = TRUE
    c5 = 0
    useC5 = TRUE
    c6 = 0
    useC6 = TRUE
    c7 = 0
    useC7 = TRUE
    c8 = 0
    useC8 = TRUE
    c9 = 0
    useC9 = TRUE
    c10 = 0
    useC10 = TRUE
    c11 = 0
    useC11 = TRUE
    c12 = 0
    useC12 = TRUE
    c13 = 0
    useC13 = TRUE
    c14 = 0
    useC14 = TRUE
    c15 = 0
    useC15 = TRUE
    c16 = 0
    useC16 = TRUE
    c17 = 0
    useC17 = TRUE
    c18 = 0
    useC18 = TRUE
    c19 = 0
    useC19 = TRUE
    autoUpdate = TRUE
  }
}
module View2D {
  internal  {
    frame = "857 -343 160 64"
    moduleGroupName = "Show Tracked Markers"
    windows  {
      window _default {
        geometry = "1442 309 753 605"
        sizeHint = "400 400"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = TrackedMarkersViewer
    inventorInputOn = TRUE
    inventorOutputOn = FALSE
    view2DExtensionsOn = TRUE
    startSlice = 0
    numSlices = 1
    numXSlices = 1
    sliceStep = 1
    slab = 1
    blendMode = BLEND_REPLACE
    timePoint = 0
    maxTimePoint = 17
    filterMode = FILTER_LINEAR
    standardKeys = TRUE
    cineMode = CINE_ZT
    cineDirection = CINE_FORWARD
    cineRepeat = CINE_ONCE
    cineSpeed = 0.1
    cineAlwaysReset = TRUE
    snapToCenter = TRUE
    zoomMode = VIEW2D_AUTO_ZOOM
    unzoomOnImageChange = FALSE
    sliceZoom = 1
    sliceZoomSynced = 1
    baseColor = "1 1 1"
    margin = "2 2"
    sliceOrigin = "0 0"
    useShaders = TRUE
    useManagedInteraction = FALSE
    lutCenter = 328.902770996094
    lutWidth = 692.109558105469
    annotationOn = TRUE
    annotationMode = ANNO_MODE_AUTO
    annotationSizeMode = ANNO_SHOW_DETAILED
    annotationCol = "0.899999976158142 0.899999976158142 0.899999976158142"
    annotationFontSize = ANNO_SIZE_AUTO
    annoCoords = Voxel
    annoCTValue = AsIs
    borderOn = FALSE
    borderColor = "0.899999976158142 0.899999976158142 0.899999976158142"
    valueHighPrecision = TRUE
    showColorChannelValues = FALSE
    colorChannelSeparator = " / "
    maxPrecision = 4
    enableSlicing = TRUE
    useRelativeLUTIfNoInputImage = TRUE
  }
}
module SoView2DMarkerEditor {
  internal  {
    frame = "877 -211 168 56"
    moduleGroupName = "Show Tracked Markers"
    windows  {
      window _default {
        geometry = "1559 775 722 685"
        sizeHint = "722 685"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = SoView2DMarkerEditor1
    interactionProviderID = ""
    drawingOn = TRUE
    editingOn = TRUE
    fixZOn = TRUE
    color = "1 0.333333343267441 0"
    selectionTolerance = 4
    needsValidVoxel = TRUE
    button1 = PRESSED
    button2 = IGNORED
    button3 = IGNORED
    shift = IGNORED
    control = IGNORED
    alt = IGNORED
    wantsAllEvents = FALSE
    wantsKeyEvents = TRUE
    wantsMouseWheelEvents = FALSE
    setEventHandled = FALSE
    ignoreHandledEvents = FALSE
    createNewMode = FALSE
    renderOnSlab = FALSE
    clipToSlice = FALSE
    cursorShape = CROSS_PLUS_CURSOR
    depthVisibility = 1
    snapToVoxel = TRUE
    snapToSlice = TRUE
    currentType = 0
    deleteOnClick = FALSE
    addOnClick = TRUE
    alphaFactor = 1
    minimumAlpha = 0.1
    iconFile = $(MLAB_MeVisLab_Standard)/Modules/Resources/Images/markerIcons.tif
    useIconFile = FALSE
    iconIdx = 0
    drawMarkerShapesWithLines = FALSE
    selectingOn = TRUE
    alwaysPerformHitTest = FALSE
    actOnReleaseOnly = FALSE
    editorMode = EDIT_MARKER
    colorMode = COLOR_BY_TYPE
    textColorMode = COLOR_TEXT
    textMode = TEXT_OFF
    textPosition = TEXT_POSITION_RIGHT_BELOW
    textColor = "1 1 1"
    textShadow = TRUE
    textFontSize = 12
    showTextOnlyForSelectedMarker = FALSE
    cutText = FALSE
    maxNumberOfLines = 1
    vectorArrow = VECTOR_END_ARROW
    vectorLineWidth = 1
    useAntiAlias = TRUE
    useVectorLengthAsMarkerSize = FALSE
    depthVectorDrawMode = DRAW_HIGHLIGHT_SLICE_SEGMENT
    drawMode = DRAW_MARKER
    highlightSelection = TRUE
    selectiveDrawing = FALSE
    selectionBoxesForCurrentOnly = FALSE
    cooperative = FALSE
    overwriteCurrentTimePoint = FALSE
    newCurrentTimePoint = 0
    depthVisibilityMode = DEPTH_IN_SLICES
    cursorShapeDragStartPoint = CROSS_MOVE_CURSOR
    cursorShapeDragEndPoint = CROSS_MOVE_CURSOR
    cursorShapeDragResize = CROSS_MOVE_CURSOR
    cursorShapeDragOffset = MOVE_ALL_CURSOR
    cursorShapeDragMove = MOVE_ALL_CURSOR
    cursorShapeDelete = CROSS_MINUS_CURSOR
    listString = ""
    index = 0
    persistent = FALSE
    listStringEnable = FALSE
    applySelect = FALSE
    name = ""
    newName = ""
    overflowMode = None
    maxSize = 0
    useInsertTemplate = FALSE
    posXYZ = "24.2516968250311 61.2178677320516 39.756021559238"
    posC = 0
    posT = 0
    posU = 0
    vecXYZ = "0 0 0"
    type = 0
    newPosXYZ = "0 0 0"
    newPosC = 0
    newPosT = 0
    newPosU = 0
    newVecXYZ = "0 0 0"
    newType = 0
  }
}
module ImageLoad {
  internal  {
    frame = "757 413 152 72"
    moduleGroupName = ""
    showNetworkPanel = true
    windows  {
      window _default {
        geometry = "1142 524 479 353"
        sizeHint = "479 353"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = VesselMask
    filename = $(NETWORK)/Data/mask.mlimage
    autoLoad = TRUE
    readRaw = FALSE
    rawX = 1
    rawY = 1
    rawZ = 1
    rawC = 1
    rawT = 1
    rawU = 1
    dataTypeRaw = "unsigned int8"
    planarConfig = Contiguous
    byteOrder = LittleEndian
    dataOffset = 0
    pageSizeHint = "0 0 0 0 0 0"
    suppressErrorLog = FALSE
    dicomIgnoreHalfVoxelShift = FALSE
    enableCheckSumTests = FALSE
  }
}
module SoView2DOverlay {
  internal  {
    frame = "117 53 168 56"
    moduleGroupName = "Define Seed Markers"
    showNetworkPanel = true
    windows  {
      window _default {
        geometry = "1651 853 539 529"
        sizeHint = "539 529"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = SoView2DOverlay
    interactionProviderID = ""
    drawingOn = TRUE
    editingOn = TRUE
    fixZOn = TRUE
    color = "1 1 1"
    selectionTolerance = 4
    needsValidVoxel = TRUE
    button1 = IGNORED
    button2 = IGNORED
    button3 = IGNORED
    shift = IGNORED
    control = IGNORED
    alt = IGNORED
    wantsAllEvents = TRUE
    wantsKeyEvents = TRUE
    wantsMouseWheelEvents = FALSE
    setEventHandled = FALSE
    ignoreHandledEvents = FALSE
    createNewMode = FALSE
    renderOnSlab = TRUE
    clipToSlice = TRUE
    cursorShape = UNDEFINED_CURSOR
    overlayName = ""
    cacheTextures = TRUE
    blendMode = BLEND_BLEND
    overwriteCurrentTimePoint = FALSE
    timePoint = 0
    maxTimePoint = 0
    filterMode = FILTER_LINEAR
    inheritFilterMode = TRUE
    lutPrecision = VIEW2D_LUT_AUTO
    alphaFactor = 0.60000002
    baseColor = "1 0.333333343267441 0"
    useWorldCoords = TRUE
    applyLut = TRUE
    isCheckerTiling = FALSE
    checkerTileSize = 2
    areCheckerTilesInverted = FALSE
  }
}
module SoGroup {
  internal  {
    frame = "9 -206 80 56"
    moduleGroupName = "Define Seed Markers"
    windows  {
      window _viewer {
        geometry = "1720 917 400 400"
        sizeHint = "400 400"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = SoGroup
  }
}
module Info {
  internal  {
    frame = "869 325 56 72"
    moduleGroupName = ""
    showNetworkPanel = true
    windows  {
      window _default {
        geometry = "834 350 884 770"
        sizeHint = "682 421"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = Info
  }
}
module So3DMarkerRenderer {
  internal  {
    frame = "821 -635 152 56"
    moduleGroupName = "View Particle Trajectories"
    windows  {
      window _default {
        geometry = "1294 636 398 360"
        sizeHint = "384 360"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = So3DMarkerRenderer
    renderCaching = AUTO
    boundingBoxCaching = AUTO
    renderCulling = AUTO
    pickCulling = AUTO
    markerRenderMode = PointSprite
    vectorRenderMode = NoVector
    geometryComplexity = LOW
    colorMode = COLOR_BY_TYPE
    diffuseColor = "1 0.333333343267441 0"
    ambientColor = "0.200000002980232 0.200000002980232 0.200000002980232"
    specularColor = "0.200000002980232 0.200000002980232 0.200000002980232"
    shininess = 0.2
    markerSize = 5
    lineWidth = 1
    vectorScale = 1
    arrowHeadSize = 1
    arrowCylinderRadius = 0.1
    timepointToRender = -1
  }
}
module SoGVRVolumeRenderer {
  internal  {
    frame = "565 -643 200 56"
    moduleGroupName = "View Particle Trajectories"
    showNetworkPanel = true
    windows  {
      window _default {
        geometry = "1890 518 491 660"
        sizeHint = "491 660"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = SoGVRVolumeRenderer
    renderCaching = AUTO
    boundingBoxCaching = AUTO
    renderCulling = AUTO
    pickCulling = AUTO
    on = TRUE
    autoLoad = TRUE
    interactiveQuality = 0.1
    staticQuality = 1
    interactiveSamplingRate = 1
    staticSamplingRate = 1
    blendMode = Blend
    octreeNodeSize = NODE_SIZE_32
    octreeParentComputationMethod = Rank
    octreeParentComputationRank = 4
    currentTimePoint = 0
    maxTimePoint = 0
    force8bit = FALSE
    filterVolumeData = FilterLinear
    filterLut = TRUE
    subVolumeStartX = 0
    subVolumeStartY = 0
    subVolumeStartZ = 0
    subVolumeEndX = 64
    subVolumeEndY = 50
    subVolumeEndZ = 72
    zbuffer = TRUE
    permitClipping = TRUE
    drawOnPlanes = TRUE
    sizeOutputX = 64
    sizeOutputY = 50
    sizeOutputZ = 72
    incrementalUpdate = TRUE
    highQualityStaticUpdate = FALSE
    staticRenderingAfterInteractionOnly = FALSE
    adaptQualityToWindowSize = TRUE
    rayCastTextureStorage = RayCastTextureStorage_Auto
    renderMode = Direct
    greyCenter = 0.5
    greyWidth = 0.5
    greyInvert = FALSE
    alphaCenter = 0.5
    alphaWidth = 0.5
    alphaInvert = FALSE
    colorFactor = "1 1 1"
    alphaFactor = 0.2
    enhancementAlphaMix = 0.25
    boundaryEnhancement = FALSE
    boundaryEnhancementFactor = 1
    boundaryEnhancementExponent = 1
    boundaryEnhancementGradientBias = 0
    silhouetteEnhancement = FALSE
    silhouetteEnhancementExponent = 1
    silhouetteEnhancementFactor = 1
    toneShading = FALSE
    toneShadingWarmColor = "0.674509823322296 0.533333361148834 0.141176477074623"
    toneShadingColdColor = "0 0 0.400000005960464"
    toneShadingWarmDiffuse = 0.60000002
    toneShadingColdDiffuse = 0.2
    toneShadingAngle = 45
    materialAmbient = 0.60000002
    materialDiffuse = 1
    materialSpecular = 1
    materialSpecularity = 32
    reduceLightingOnLowGradientMagnitude = FALSE
    light1Enabled = TRUE
    light1DiffuseIntensity = 1
    light1SpecularIntensity = 1
    light1Color = "1 1 1"
    light1PolarPhi = 0
    light1PolarRho = 0
    light2Enabled = FALSE
    light2DiffuseIntensity = 1
    light2SpecularIntensity = 1
    light2Color = "1 1 1"
    light2PolarPhi = 45
    light2PolarRho = 45
    light3Enabled = FALSE
    light3DiffuseIntensity = 1
    light3SpecularIntensity = 1
    light3Color = "1 1 1"
    light3PolarPhi = -45
    light3PolarRho = 0
    gradientQuality = GradientQualityAutomatic
    selectionAlphaThreshold = 0.2
    selectionActive = FALSE
    useWorldCoords = TRUE
  }
}
module SoExaminerViewer {
  internal  {
    frame = "606 -802 136 56"
    moduleGroupName = "View Particle Trajectories"
    windows  {
      window _viewer {
        geometry = "938 485 1278 1351"
        sizeHint = "400 400"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = SoExaminerViewer
    renderCaching = AUTO
    boundingBoxCaching = AUTO
    renderCulling = AUTO
    pickCulling = AUTO
    border = FALSE
    background = "0 0 0"
    transparency = BLEND
    antialiasing = FALSE
    antialiasingNumPasses = 1
    useSampleBuffers = FALSE
    numSamples = 8
    grabKeyFocus = TRUE
    enableKeyCommands = TRUE
    snapshotFormat = SNAPSHOT_RGB
    outputAviFile = ""
    autoRedrawWhenRecording = TRUE
    frameRate = 7
    frameRateAvi = 15
    outputSnapshotFile = none
    outputSnapshotFileWritten = none
    autoIncreaseFile = TRUE
    showSnapshotWithShell = FALSE
    snapCount = 0
    inputDevicesList = ""
    headlight = TRUE
    decoration = TRUE
    popupMenuEnabled = FALSE
    viewing = TRUE
    autoClipping = TRUE
    drawStyle = VIEW_AS_IS
    interactiveDrawStyle = VIEW_LOW_COMPLEXITY
    viewAllFlag = FALSE
    initialCameraOrientation = CAMERA_KEEP_AS_IS
    applyCameraOrientation = CAMERA_KEEP_AS_IS
    cameraType = CAMERA_PERSPECTIVE
    autoApplyUserSettingOrientation = FALSE
    userSettingOrientation = "0 0 1 0"
    automaticViewAll = FALSE
    storeCurrentState = TRUE
    saveCamera = TRUE
    cursor = TRUE
    isCameraStored = TRUE
    perspective = TRUE
    stereoViewing = FALSE
    stereoOffset = 3
    height = 0.78539819
    position = "276.346740722656 73.4429016113281 48.6888732910156"
    orientation = "-0.388191223144531 -0.646707713603973 -0.656564235687256 4.14661693572998"
    nearDistance = 164.2359
    farDistance = 324.94836
    focalDistance = 254.8945
    forceRedrawOnInteraction = FALSE
    button1events = TO_VIEWER
    button2events = TO_VIEWER
    button3events = TO_VIEWER
    keyEvents = TO_VIEWER
    animationEnabled = FALSE
    feedback = FALSE
    feedbackSize = 32
    mouseInteraction = ""
    rotationAxis = "0 1 0"
    rotationAngle = 360
    rotationSteps = 80
    recordRotation = TRUE
    wheelZoomEnabled = TRUE
    wheelRotationEnabled = TRUE
  }
}
module SoBackground {
  internal  {
    frame = "413 -643 120 56"
    moduleGroupName = "View Particle Trajectories"
    windows  {
      window _default {
        geometry = "1845 1038 151 158"
        sizeHint = "151 158"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = SoBackground1
    rotate = TRUE
    flip = FALSE
    on = TRUE
    depthBuffer = TRUE
  }
}
connections  {
  View2D.inImage = MergeRegions.output0
  View2D.inInvPreLUT = SoGroup.self
  TrackParticles.input0 = MergeRegions.output1
  ViewVectorField.children = "SoBackground.self SoTensorFieldVis.self"
  SoTensorFieldVis.inImageTensor = VectorField.output0
  MaskToMarkers.input0 = TrackParticles.output0
  XMarkerListConvert.input0 = MergeRegions.output0
  XMarkerListConvert.inputXMarkerList = SoView2DMarkerEditor.outXMarkerList
  MergeRegions.input0 = MagnitudeImage.output0
  MergeRegions.input1 = VectorField.output0
  MergeRegions.input2 = VesselMask.output0
  TrackedMarkersViewer.inImage = MergeRegions.output0
  TrackedMarkersViewer.inInvPreLUT = SoView2DMarkerEditor1.self
  SoView2DMarkerEditor1.inXMarkerList = MaskToMarkers.outputXMarkerList
  SoView2DOverlay.image = MergeRegions.output2
  SoGroup.children = "SoView2DOverlay.self SoView2DMarkerEditor.self"
  Info.input0 = VectorField.output0
  So3DMarkerRenderer.inMarkers = MaskToMarkers.outputXMarkerList
  SoGVRVolumeRenderer.image = VesselMask.output0
  SoExaminerViewer.children = "SoBackground1.self So3DMarkerRenderer.self SoGVRVolumeRenderer.self"
}
networkModel  {
  parentItems  {
    0  {
      MLABNetworkModelItem MLABNetworkModelItemGroup {
        uniqueId = 22
        objectName = "Define Seed Markers"
        parentUniqueId = 0
        color  {
          r = 45
          g = 226
          b = 226
          a = 40
        }
      }
      MLABNetworkModelItem MLABNetworkModelItemGroup {
        uniqueId = 32
        objectName = "View Vector Field"
        parentUniqueId = 0
        color  {
          r = 45
          g = 226
          b = 226
          a = 40
        }
      }
      MLABNetworkModelItem MLABNetworkModelItemGroup {
        uniqueId = 42
        objectName = "Show Tracked Markers"
        parentUniqueId = 0
        color  {
          r = 45
          g = 226
          b = 226
          a = 40
        }
      }
      MLABNetworkModelItem MLABNetworkModelItemGroup {
        uniqueId = 92
        objectName = "View Particle Trajectories"
        parentUniqueId = 0
        color  {
          r = 45
          g = 226
          b = 226
          a = 40
        }
      }
      MLABNetworkModelItem MLABNoteItem {
        uniqueId = 67
        objectName = ""
        parentUniqueId = 0
        frame = "-252 -878 556 434"
        backgroundColor  {
          r = 252
          g = 242
          b = 2
          a = 255
        }
        text = "Implementation Issue

The tracking code executes correctly but fails to visualize the particle path - no new markers appear during iteration despite successful initial marker placement. The algorithm runs without errors but the output visualization doesn't update properly.


Why Results Are Not Accurate

The simple Euler integration method accumulates significant numerical errors over time. With only 18 discrete time points, temporal resolution is too coarse for smooth flow tracking. The algorithm lacks spatial interpolation (uses nearest-neighbor sampling) and ignores physical constraints like vessel boundaries. Additionally, vendor-specific flow vector encoding differences can cause incorrect tracking directions."
        richText = "*<html>
  <head>
    <style type="text/css">
      a.headerlink {
        visibility: hidden;
      }
      table {
        border-collapse: collapse;
      }
    </style>
  </head>
  <body>

  <p>Implementation Issue</p>
<p>The tracking code executes correctly but fails to visualize the particle path - no new markers appear during iteration despite successful initial marker placement. The algorithm runs without errors but the output visualization doesn't update properly.</p>
<p>Why Results Are Not Accurate</p>
<p>The simple Euler integration method accumulates significant numerical errors over time. With only 18 discrete time points, temporal resolution is too coarse for smooth flow tracking. The algorithm lacks spatial interpolation (uses nearest-neighbor sampling) and ignores physical constraints like vessel boundaries. Additionally, vendor-specific flow vector encoding differences can cause incorrect tracking directions.</p>


  </body>
</html>*"
        titleText = Exercise
        isCollapsed = False
        drawAsComment = False
        titleFrame = "-247 -873 546 22"
      }
    }
  }
}
