// MDL v1 utf8
mevislabVersion = 3.6.1.9
network  {
  watchlist = ""
}
module Arithmetic2 {
  internal  {
    frame = "861 30 131 64"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "538 147 215 83"
        sizeHint = "215 83"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = OriginalAndScaled
    function = Difference
    outputImageSize = AdaptOutputImageSize
    constant = 0
    autoReplicate = FALSE
  }
}
module Arithmetic2 {
  internal  {
    frame = "1002 26 152 64"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "538 147 215 83"
        sizeHint = "215 83"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = OriginalAndRegistered
    function = Difference
    outputImageSize = AdaptOutputImageSize
    constant = 0
    autoReplicate = FALSE
  }
}
module SynchroView2D {
  internal  {
    frame = "933 -67 120 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "2450 878 804 400"
        sizeHint = "804 400"
        wasOpen = no
      }
      window Settings {
        geometry = "693 530 543 181"
        sizeHint = "543 181"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = SynchroView2D
    leftInventorInputOn = FALSE
    rightInventorInputOn = FALSE
    synchSlicing = TRUE
    synchZooming = TRUE
    synchTiming = TRUE
    synchLUTs = FALSE
    disconnectOnHide = TRUE
    snapToCenter1 = FALSE
    snapToCenter2 = FALSE
    slice1 = 3
    timepoint1 = 0
    filterMode = FILTER_LINEAR
    slice2 = 3
    timepoint2 = 0
    lut1w = 4095
    lut1c = 2047.5
    lut2w = 4095
    lut2c = 2047.5
    annotationColor = "0.899999976158142 0.899999976158142 0.899999976158142"
    borderOn = FALSE
    drawCurrentPos = TRUE
    showCurrentPos = TRUE
    worldPosition = "95.9444427490234 110.09595489502 -93"
    background = "0 0 0"
  }
}
module LocalImage {
  internal  {
    frame = "994 361 94 64"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "26 59 499 199"
        sizeHint = "499 199"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = Scaled
    name = $(NETWORK)/data/scale_4slices.dcm
    autoLoad = TRUE
  }
}
module LocalImage {
  internal  {
    frame = "873 361 96 64"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "26 59 499 199"
        sizeHint = "499 199"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = Original
    name = $(NETWORK)/data/4_slices.dcm
    autoLoad = TRUE
  }
}
module itkLinearInterpolateImageFunction {
  internal  {
    frame = "605 365 216 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "92 146 148 68"
        sizeHint = "146 68"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = itkLinearInterpolateImageFunction
    status = "Output is valid"
  }
}
module itkMeanSquaresImageToImageMetric {
  internal  {
    frame = "601 181 240 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "1691 850 854 684"
        sizeHint = "424 591"
        wasOpen = no
      }
      window _automatic {
        geometry = "1113 389 702 600"
        sizeHint = "260 223"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = itkMeanSquaresImageToImageMetric
    minValue = 0
    maxValue = 4095
    applyMinMax = FALSE
    autoSetMinMax = TRUE
    clampOutImageValues = FALSE
    lowerOutSideMode = MinValue
    upperOutSideMode = MaxValue
    lowerOutSideValue = 0
    upperOutSideValue = 1
    status = "Output image updated"
    computeGradient = TRUE
    useCachingOfBSplineWeights = TRUE
    fixedImageRegion = "0 0 0 0 0 0 180 216 3 0 0 0"
    useFixedImageIndexes = FALSE
    numberOfFixedImageSamples = -2
    numberOfSpatialSamples = 0
    fixedImageSamplesIntensityThreshold = 1
    useFixedImageSamplesIntensityThreshold = FALSE
    useAllPixels = FALSE
    useSequentialSampling = TRUE
    updateFixedImageRegion = Always
  }
}
module itkRegularStepGradientDescentOptimizer {
  internal  {
    frame = "457 45 256 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "1682 962 1024 533"
        sizeHint = "701 477"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = itkRegularStepGradientDescentOptimizer
    maximize = FALSE
    maximumStepLength = 1
    minimumStepLength = 0.0001
    relaxationFactor = 0.6
    numberOfIterations = 500
    gradientMagnitudeTolerance = 0.0001
    initialPosition = "0 0 0 "
    scales = "1 1 1 "
    status = "Starting Optimization:...processing:1,2, ... 9,500... finished."
  }
}
module itkAffineTransform {
  internal  {
    frame = "441 365 128 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "1670 1069 435 427"
        sizeHint = "336 391"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = itkAffineTransform
    matrix = "1 0 0 0
0 1 0 0
0 0 1 0
0 0 0 0"
    offset = "0 0 0"
    center = "0 0 0"
    translation = "0 0 0"
    parameters = "1 0 0 0 1 0 0 0 1 0 0 0 "
    fixedParameters = "0 0 0 "
    status = "Output is valid"
  }
}
module itkTranslationTransform {
  internal  {
    frame = "241 363 157 50"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "1770 992 371 251"
        sizeHint = "300 251"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = itkTranslationTransform
    parameters = "0 0 0 "
    offset = "0 0 0"
    status = "Output is valid"
  }
}
connections  {
  OriginalAndScaled.input0 = Original.outImage
  OriginalAndScaled.input1 = Scaled.outImage
  OriginalAndRegistered.input0 = Original.outImage
  OriginalAndRegistered.input1 = itkMeanSquaresImageToImageMetric.output0
  SynchroView2D.inImage1 = OriginalAndScaled.output0
  SynchroView2D.inImage2 = OriginalAndRegistered.output0
  itkMeanSquaresImageToImageMetric.input0 = Original.outImage
  itkMeanSquaresImageToImageMetric.input1 = Scaled.outImage
  itkMeanSquaresImageToImageMetric.inputTransform = itkTranslationTransform.outputTransform
  itkMeanSquaresImageToImageMetric.inputInterpolator = itkLinearInterpolateImageFunction.outputInterpolator
  itkRegularStepGradientDescentOptimizer.inputSingleValuedCostFunction = itkMeanSquaresImageToImageMetric.outputMetric
}
networkModel  {
  parentItems  {
    0  {
      MLABNetworkModelItem MLABNoteItem {
        uniqueId = 29
        objectName = ""
        parentUniqueId = 0
        frame = "3 -343 297 389"
        backgroundColor  {
          r = 252
          g = 242
          b = 2
          a = 255
        }
        text = "1.)
Mutual Information and Normalized Mutual Information are most effective, as they capture statistical dependencies rather than direct intensity differences.

2.) 
Parametric registration uses global transforms defined by a few parameters. Optical flow estimates dense, local displacements for each pixel or voxel.

3.)
A diffeomorphism is a smooth, invertible mapping that preserves topology. It's essential for nonrigid registration where anatomical consistency matters.

4.)
LDDMM stands for Large Deformation Diffeomorphic Metric Mapping. It’s used in deformable image registration, especially for brain alignment and shape analysis."
        richText = "*<html>
  <head>
    <style type="text/css">
      a.headerlink {
        visibility: hidden;
      }
      table {
        border-collapse: collapse;
      }
    </style>
  </head>
  <body>

  <p>1.)
Mutual Information and Normalized Mutual Information are most effective, as they capture statistical dependencies rather than direct intensity differences.</p>
<p>2.)
Parametric registration uses global transforms defined by a few parameters. Optical flow estimates dense, local displacements for each pixel or voxel.</p>
<p>3.)
A diffeomorphism is a smooth, invertible mapping that preserves topology. It's essential for nonrigid registration where anatomical consistency matters.</p>
<p>4.)
LDDMM stands for Large Deformation Diffeomorphic Metric Mapping. It’s used in deformable image registration, especially for brain alignment and shape analysis.</p>


  </body>
</html>*"
        titleText = Questions:
        isCollapsed = False
        drawAsComment = False
        titleFrame = "8 -338 287 22"
      }
      MLABNetworkModelItem MLABNoteItem {
        uniqueId = 30
        objectName = ""
        parentUniqueId = 0
        frame = "315 -338 277 331"
        backgroundColor  {
          r = 252
          g = 242
          b = 2
          a = 255
        }
        text = "The optimizer’s step length and number of iterations directly impact registration accuracy and convergence. A large initial step accelerates convergence but risks overshooting, while a small minimum step ensures fine adjustments. Fewer iterations may lead to underfitting; more allow better refinement but increase runtime. In my case, using moderate step sizes and 500 iterations led to stable convergence and visually improved alignment"
        richText = "*<html>
  <head>
    <style type="text/css">
      a.headerlink {
        visibility: hidden;
      }
      table {
        border-collapse: collapse;
      }
    </style>
  </head>
  <body>

  <p>The optimizer’s step length and number of iterations directly impact registration accuracy and convergence. A large initial step accelerates convergence but risks overshooting, while a small minimum step ensures fine adjustments. Fewer iterations may lead to underfitting; more allow better refinement but increase runtime. In my case, using moderate step sizes and 500 iterations led to stable convergence and visually improved alignment</p>


  </body>
</html>*"
        titleText = Discussion
        isCollapsed = False
        drawAsComment = False
        titleFrame = "320 -333 267 22"
      }
    }
  }
}
